[include moonraker_obico_macros.cfg]
# This file contains common pin mappings for the BIGTREETECH Manta M8P V1.0
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# This config is currently only correct for V1.0 boards
# 
# See docs/Config_Reference.md for a description of parameters.

[include KAMP_Settings.cfg]
[include mainsail.cfg]
[include macros/index.cfg]
[include runout.cfg]
[include EBBCan.cfg]

[mcu]
##	[X in MOTOR1] - B Motor
##	[Y in MOTOR2] - A Motor
##	[E in EBBCan] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_17004C000E504B4633373520-if00
canbus_uuid: 42a4cf51677c

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 4000    			#Max 4000
max_z_velocity: 25 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 300
square_corner_velocity: 5.0

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE2
dir_pin: !PB4
enable_pin: !PC11
microsteps: 64
rotation_distance: 40
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop 
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 75   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC10
diag_pin: PF3
interpolate: false
stealthchop_threshold: 0
sense_resistor: 0.110
run_current: 0.976
driver_TBL: 1
driver_TOFF: 3
driver_HSTRT: 2
driver_HEND: 3
driver_SGTHRS: 120 # 255 is most sensitive value, 0 is least sensitive

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PF12
dir_pin: !PF11
enable_pin: !PB3
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
position_endstop: 360
position_max: 360
homing_speed: 75  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PF13
diag_pin: PF4
interpolate: false
stealthchop_threshold: 0
sense_resistor: 0.110
run_current: 0.976
driver_TBL: 1
driver_TOFF: 3
driver_HSTRT: 2
driver_HEND: 3
driver_SGTHRS: 120 # 255 is most sensitive value, 0 is least sensitive

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PF10
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 340
position_min: -10
homing_speed: 25
second_homing_speed: 10
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF9
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PD3
dir_pin: PD2
enable_pin: !PD5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PA10
dir_pin: PA14
enable_pin: !PA15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PF8
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z3 Stepper - Front Right on Motor7
#[stepper_z3]
#step_pin: PD12
#dir_pin: !PD11
#enable_pin: !PD14
#rotation_distance: 40
#gear_ratio: 80:16
#microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 stepper_z3]
#uart_pin: PD13
#interpolate: false
#run_current: 0.8
#sense_resistor: 0.110
#stealthchop_threshold: 999999

##	E0 on Motor7
##	Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 extruder]
#uart_pin: PC7
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on Motor8
#[extruder]
#step_pin: PD10
#dir_pin: PD8
#enable_pin: !PD9
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
#gear_ratio: 50:17				#BMG Gear Ratio
#microsteps: 16
#full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: PE3
##	Validate the following thermistor type to make sure it is correct

## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:

#sensor_pin: PA1
#min_temp: 10
#max_temp: 270
#max_power: 1.0
#min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040


#[filament_switch_sensor material_0]
#switch_pin: ^PC1

#[filament_switch_sensor material_1]
#switch_pin: ^PC2

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE0
heater_pin: PE3
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PA0
##	Adjust Max Power according to 0.4w per square cm. Calculator available at https://tools.takuya.wtf/
max_power: 0.75
min_temp: 0
max_temp: 120
control: pid
pid_Kp: 43.470
pid_Ki: 1.260
pid_Kd: 374.927

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Voron Tap (https://github.com/VoronDesign/Voron-Tap/blob/main/config/tap_klipper_instructions.md)
#pin: PC0 #M4-STOP
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
#z_offset: -1.540
speed: 15.0
samples: 2
samples_result: median
sample_retract_dist: 5
samples_tolerance: 0.01
samples_tolerance_retries: 5

activate_gcode:
    {% set PROBE_TEMP = 180 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 310,310
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7 # Values should be odd, so one point is directly at bed center
algorithm: bicubic

#####################################################################
# 	Fan Control
#####################################################################

[temperature_sensor bottom_chamber_temp]
sensor_type: Generic 3950
sensor_pin: PA1

[temperature_sensor gantry_chamber_temp]
sensor_type: Generic 3950 
sensor_pin: PA2

[temperature_fan chamber]
##	Stepper cooling fan - CNC_FAN0
##  https://docs.vorondesign.com/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html
pin: PE0                                                          # the fan control pin (must be a mosfet or a pwm fan)
control: pid
pid_kp: 40.0
pid_ki: 5.0
pid_kd: 0.01
sensor_type: temperature_combined                                 # new temperature type
sensor_list: temperature_sensor bottom_chamber_temp, temperature_sensor gantry_chamber_temp
combination_method: mean                                          # use the mean reading of the sensors
maximum_deviation: 999.9                                          # we don't care about the difference in temperature
max_temp: 85                                                      # just the valid temperature ranges
min_temp: 0
target_temp: 30.0                                                 # the initial target temperature for the fan
max_power: 1.0
max_speed: 1.0
min_speed: 0
gcode_id: C

[heater_fan bed_fans]
##  Nevermore v6 - HE1
pin: PB5
fan_speed: 1.0
max_power: 1.0
heater: heater_bed
kick_start_time: 0.5
heater_temp: 65.0

#[temperature_fan M8P_fans]
##	Stepper and SOC cooling fans - CNC_FAN2
#pin: PC12
#control: pid
#pid_kd: 10.0
#pid_kp: 10.0
#pid_ki: 0.5
#min_speed: 0.25
#max_speed: 1.0
#sensor_type: temperature_host
#min_temp: 0
#target_temp: 50
#max_temp: 100

[heater_fan M8P_fans]
##	Exhaust fan - CNC_FAN3
pin: PC12
max_power: 1.0
heater: heater_bed, extruder
heater_temp: 50
fan_speed: 0.5

[heater_fan exhaust_fan1]
##	Exhaust fan - CNC_FAN3
pin: PE5
max_power: 1.0
heater: heater_bed, extruder
heater_temp: 50
fan_speed: 0.5

[heater_fan exhaust_fan2]
##	Exhaust fan - CNC_FAN4
pin: PE4
max_power: 1.0
heater: heater_bed, extruder
heater_temp: 50
fan_speed: 0.5
#tachometer_pin: PC13

#[controller_fan SoC_fan1]
#pin: PB8
#tachometer_pin: PC14
#control: pid
#pid_kd: 10.0
#pid_kp: 10.0
#pid_ki: 0.5
#min_speed: 0.25
#max_speed: 1.0
#sensor_type: temperature_host
#min_temp: 0
#target_temp: 55
#max_temp: 100

#[heater_fan fan6]
#pin: PB9
#tachometer_pin: PC15

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB6
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################
[skew_correction]

[safe_z_home]
home_xy_position:175,175
speed:300
z_hop:10

[quad_gantry_level]
gantry_corners:
	-60,-10
	410,420
points:
	50,25
	50,275
	300,275
	300,25

speed: 500
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.01
max_adjust: 10

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE9, EXP1_2=PE10,
    EXP1_3=PE11, EXP1_4=PE12,
    EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
    EXP1_7=PE15, EXP1_8=PB10,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
    EXP2_3=PF7, EXP2_4=PB12,
    EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

# Enable object exclusion
[exclude_object]

# Change timeout settings
[idle_timeout]
timeout: 86400
#gcode:

# Enable arcs support
[gcode_arcs]
resolution: 0.1
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

# Cancel object (aka Marlin/RRF M486 commands) support
[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro G28]
rename_existing: G0028
variable_homing:False
gcode:
  SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=True
  G0028
  SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=False

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z30 F3600

[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={s}

[gcode_macro HOME]
gcode:
    G90
    # Home Z
    G28 Z0
    G1 Z10 F1200
    # Home Y
    G28 Y0
    G1 Y5 F1200
    # Home X
    G4 P2000
    G28 X0
    G1 X5 F1200

# Enable pause resume option
[pause_resume]

[gcode_macro RESUME]
rename_existing: RESUME_BASE
gcode:
  {% if not printer.pause_resume.is_paused %}
    M117 You can't use RESUME because the printer is not paused.
  {% else %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      #Save current position
      SAVE_GCODE_STATE NAME=pause_position
    
      #Clean Nozzle on brush
      CLEAN_NOZZLE
    
      #Return to saved position
      RESTORE_GCODE_STATE NAME=pause_position
      #Resume Print
      RESUME_BASE  
    {% else %}
      M117 Unable to resume due to nozzle temperature. Set it and try again.
    {% endif %}
  {% endif %}

[gcode_macro CENTER]
gcode:
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } Z{ printer.toolhead.axis_maximum.z/2 } F7200

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 48.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 36.6
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.081250, -0.018750, 0.011250, 0.005000, 0.001250, -0.052500
#*# 	  -0.070000, -0.010000, 0.015000, 0.021250, 0.011250, -0.045000
#*# 	  -0.047500, -0.005000, 0.010000, 0.022500, -0.008750, -0.045000
#*# 	  -0.026250, 0.002500, 0.012500, 0.027500, 0.007500, -0.046250
#*# 	  -0.035000, 0.090000, 0.001250, 0.013750, -0.007500, -0.053750
#*# 	  -0.048750, -0.036250, -0.006250, 0.013750, 0.005000, -0.030000
#*# 	  -0.077500, -0.041250, -0.020000, -0.006250, -0.038750, -0.068750
#*# tension = 0.2
#*# min_x = 80.59999999999997
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 6
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 269.54999999999995
#*#
#*# [skew_correction calilantern_skew_profile]
#*# xy_skew = 0.0007778254905376441
#*# xz_skew = -0.0016758435628260763
#*# yz_skew = -0.00019788265757885083
#*#
#*# [probe]
#*# z_offset = -1.381
